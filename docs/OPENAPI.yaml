openapi: 3.0.3
info:
  title: Blind App API
  version: 1.0.0
  description: API specification for Blind App endpoints
servers:
  - url: https://your-domain.com/api

paths:
  /post:
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [content, authorId, college]
              properties:
                content:
                  type: string
                authorId:
                  type: string
                college:
                  type: string
      responses:
        '200':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Missing required fields
        '403':
          description: Content flagged as toxic
        '500':
          description: Internal server error

    get:
      summary: Get posts (paginated)
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
          description: Cursor for pagination
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  nextCursor:
                    type: string
                    nullable: true
        '500':
          description: Internal server error

  /post/latest:
    get:
      summary: Get latest post ID
      responses:
        '200':
          description: Latest post ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  latestPostId:
                    type: string
                    nullable: true
        '500':
          description: Internal server error

  /verify-otp:
    post:
      summary: Verify OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp]
              properties:
                email:
                  type: string
                otp:
                  type: string
      responses:
        '200':
          description: OTP verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
                  email:
                    type: string
                  anonName:
                    type: string
                    nullable: true
        '400':
          description: Missing/invalid input
        '401':
          description: Not found or invalid/expired OTP
        '500':
          description: Server error

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  anonName:
                    type: string
                    nullable: true
                  isVerified:
                    type: boolean
        '400':
          description: Bad input
        '401':
          description: Invalid credentials
        '403':
          description: Locked/inactive/unverified
        '500':
          description: Server error

  /register:
    post:
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  message:
                    type: string
                  isVerified:
                    type: boolean
        '400':
          description: Bad input
        '500':
          description: Server error

components:
  schemas:
    AnonMapping:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        anonName:
          type: string
        createdAt:
          type: string
          format: date-time
      required: [id, userId, anonName, createdAt]
      additionalProperties: false

    CommentLike:
      type: object
      properties:
        id:
          type: string
          format: uuid
        commentId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      required: [id, commentId, userId, createdAt]
      additionalProperties: false

    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        postId:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        isFlagged:
          type: boolean
          default: false
      required: [id, content, createdAt, postId, authorId, isFlagged]
      additionalProperties: false

    Log:
      type: object
      properties:
        id:
          type: string
          format: uuid
        action:
          type: string
        details:
          anyOf:
            - type: string
            - type: 'null'
        createdAt:
          type: string
          format: date-time
      required: [id, action, createdAt]
      additionalProperties: false

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        message:
          type: string
        read:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
      required: [id, userId, message, read, createdAt]
      additionalProperties: false

    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        authorId:
          type: string
          format: uuid
        college:
          type: string
        createdAt:
          type: string
          format: date-time
        isFlagged:
          type: boolean
          default: false
        engagementScore:
          type: number
          format: float
      required: [id, content, authorId, college, createdAt, isFlagged]
      additionalProperties: false

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        createdAt:
          type: string
          format: date-time
        verified:
          type: boolean
          default: false
        otp:
          anyOf:
            - type: string
            - type: 'null'
      required: [id, email, password, createdAt, verified]
      additionalProperties: false
